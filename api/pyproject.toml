[build-system]
requires = ["flit_core >=3.2,<4"]
build-backend = "flit_core.buildapi"

[project]
name = "activetigger"
authors = [{name = "Émilien Schultz - Julien Boelaert - Étienne Ollion", email = "emilien.schultz@gmail.com"}]
readme = "README.md"
license = {file = "LICENSE"}
classifiers = ["License :: OSI Approved :: MIT License"]
dynamic = ["version", "description"]
requires-python = ">= 3.11"
dependencies = ["fastapi[all]",
		"sentencepiece",
		"requests",
		"uvicorn",
		"argparse",
		"datasets",
		"fasttext",
		"ipywidgets",
		"pyyaml",
		"IPython",
		"numpy",
		"pandas",
		"pyarrow",
		"torch",
		"transformers[torch]",
		"sentence_transformers",
		"typing-inspect",
		"typing_extensions",
		"spacy",
		"pyyaml",
		"protobuf",
		"umap-learn",
		"distinctipy",
		"python-jose[cryptography]",
		"bcrypt",
		"plotly",
		"matplotlib",
		"scikit-learn"]

[tool.ruff]
line-length = 100

[tool.ruff.lint]
extend-select = [
#  "B",           # flake8-bugbear
  "I",           # isort
# that will be a problem for pytest fixture unless you swap with the usefixture decorator https://docs.pytest.org/en/7.1.x/how-to/fixtures.html#use-fixtures-in-classes-and-modules-with-usefixtures
#  "ARG",         # flake8-unused-arguments
#  "C4",          # flake8-comprehensions
#  "EM",          # flake8-errmsg
  "ICN",         # flake8-import-conventions
#  "G",           # flake8-logging-format
  "PGH",         # pygrep-hooks
#  "PIE",         # flake8-pie
#  "PL",          # pylint
#  "PTH",         # flake8-use-pathlib
#  "PT",          # flake8-pytest-style
#  "RET",         # flake8-return
#  "RUF",         # Ruff-specific
#  "SIM",         # flake8-simplify
#  "T20",         # flake8-print
#  "UP",          # pyupgrade
  "YTT",         # flake8-2020
  "EXE",         # flake8-executable
#  "PYI",         # flake8-pyi
#  "S",           # flake8-bandit
]
ignore = [
#  "E501",     # E501 Line too long (158 > 100 characters)
#  "SIM105",   # SIM105 Use `contextlib.suppress(...)`
#  "PLR",      # Design related pylint codes
#  "S101",     # Use of `assert` detected
]
unfixable = [
  # Don't touch print statements
  "T201",
  # Don't touch noqa lines
  "RUF100",
]

[tool.mypy]
python_version = "3.11"
files = [
	"activetigger/db/*.py", # Add files each time one is cleaned
	"activetigger/generation/*.py"
]
incremental = true
